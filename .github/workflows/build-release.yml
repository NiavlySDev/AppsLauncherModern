name: üöÄ Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-windows:
    name: üñ•Ô∏è Build Windows
    runs-on: windows-latest
    
    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v4
      
    - name: üêç Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: üì¶ Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        
    - name: üé® Create icons
      run: python scripts/create_icons.py
      
    - name: üî® Build executable
      run: pyinstaller build/windows/app.spec --clean --noconfirm
      
    - name: üìÅ Prepare distribution
      run: |
        if (Test-Path "build/windows/dist") { Remove-Item -Recurse -Force "build/windows/dist" }
        Move-Item "dist" "build/windows/dist"
        
    - name: üèóÔ∏è Setup NSIS
      run: |
        Invoke-WebRequest -Uri "https://nsis.sourceforge.io/mediawiki/images/4/4a/Nsis-3.08-setup.exe" -OutFile "nsis-setup.exe"
        Start-Process -Wait -FilePath "nsis-setup.exe" -ArgumentList "/S"
        
    - name: üì¶ Create installer
      run: |
        cd build/windows
        & "C:\Program Files (x86)\NSIS\makensis.exe" installer.nsi
        
    - name: üì§ Upload Windows artifacts
      uses: actions/upload-artifact@v3
      with:
        name: windows-installer
        path: build/windows/AppsLauncherModern-Setup-*.exe

  build-linux:
    name: üêß Build Linux
    runs-on: ubuntu-latest
    
    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v4
      
    - name: üêç Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: üì¶ Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev
        
    - name: üì¶ Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        
    - name: üé® Create icons
      run: python scripts/create_icons.py
      
    - name: üî® Build executable
      run: pyinstaller build/linux/app.spec --clean --noconfirm
      
    - name: üìÅ Prepare distribution
      run: |
        if [ -d "build/linux/dist" ]; then rm -rf "build/linux/dist"; fi
        mv "dist" "build/linux/dist"
        
    - name: üîß Make build script executable
      run: chmod +x build/linux/build_linux.sh
      
    - name: üì¶ Create packages
      run: |
        cd build/linux
        
        # Cr√©er la structure AppImage
        APPDIR="appimage/AppsLauncherModern.AppDir"
        mkdir -p "$APPDIR"/{usr/bin,usr/share/applications,usr/share/icons/hicolor/256x256/apps}
        
        # Copier l'ex√©cutable
        cp -r dist/AppsLauncherModern/* "$APPDIR/usr/bin/"
        
        # Copier les fichiers desktop et ic√¥nes
        cp appslauncher-modern.desktop "$APPDIR/"
        cp appslauncher-modern.desktop "$APPDIR/usr/share/applications/"
        cp ../../assets/app_icon.png "$APPDIR/usr/share/icons/hicolor/256x256/apps/appslauncher-modern.png"
        cp ../../assets/app_icon.png "$APPDIR/appslauncher-modern.png"
        
        # Cr√©er AppRun
        cat > "$APPDIR/AppRun" << 'EOF'
        #!/bin/bash
        HERE="$(dirname "$(readlink -f "${0}")")"
        export PATH="${HERE}/usr/bin:${PATH}"
        export LD_LIBRARY_PATH="${HERE}/usr/lib:${LD_LIBRARY_PATH}"
        exec "${HERE}/usr/bin/AppsLauncherModern" "$@"
        EOF
        chmod +x "$APPDIR/AppRun"
        
        # T√©l√©charger et utiliser appimagetool
        wget -O appimagetool-x86_64.AppImage \
          "https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage"
        chmod +x appimagetool-x86_64.AppImage
        
        # Cr√©er l'AppImage
        ./appimagetool-x86_64.AppImage appimage/AppsLauncherModern.AppDir \
          AppsLauncherModern-v2.1.0-x86_64.AppImage --no-appstream || true
          
        # Cr√©er le package .deb
        DEBDIR="deb/appslauncher-modern_2.1.0_amd64"
        mkdir -p "$DEBDIR"/{DEBIAN,usr/bin,usr/share/applications,usr/share/icons/hicolor/256x256/apps,usr/share/doc/appslauncher-modern}
        
        # Copier l'ex√©cutable
        cp -r dist/AppsLauncherModern/* "$DEBDIR/usr/bin/"
        
        # Copier les fichiers desktop et ic√¥nes
        cp appslauncher-modern.desktop "$DEBDIR/usr/share/applications/"
        cp ../../assets/app_icon.png "$DEBDIR/usr/share/icons/hicolor/256x256/apps/appslauncher-modern.png"
        
        # Copier la documentation
        cp ../../README.md "$DEBDIR/usr/share/doc/appslauncher-modern/"
        cp ../../LICENSE "$DEBDIR/usr/share/doc/appslauncher-modern/copyright"
        
        # Cr√©er le fichier de contr√¥le
        cat > "$DEBDIR/DEBIAN/control" << EOF
        Package: appslauncher-modern
        Version: 2.1.0
        Section: utils
        Priority: optional
        Architecture: amd64
        Depends: libc6, libgtk-3-0
        Maintainer: NiavlySDev <niavlys.dev@gmail.com>
        Description: Lanceur d'applications moderne
         AppsLauncher Modern est un lanceur d'applications avec une interface
         moderne construite avec CustomTkinter.
        EOF
        
        # Construire le package .deb
        dpkg-deb --build appslauncher-modern_2.1.0_amd64
        
    - name: üì§ Upload Linux artifacts
      uses: actions/upload-artifact@v3
      with:
        name: linux-packages
        path: |
          build/linux/AppsLauncherModern-v2.1.0-x86_64.AppImage
          build/linux/deb/appslauncher-modern_2.1.0_amd64.deb

  create-release:
    name: üéâ Create Release
    needs: [build-windows, build-linux]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v4
      
    - name: üì• Download Windows artifacts
      uses: actions/download-artifact@v3
      with:
        name: windows-installer
        path: ./artifacts/windows/
        
    - name: üì• Download Linux artifacts
      uses: actions/download-artifact@v3
      with:
        name: linux-packages
        path: ./artifacts/linux/
        
    - name: üìã Get release info
      id: release_info
      run: |
        VERSION=${GITHUB_REF#refs/tags/}
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "prerelease=false" >> $GITHUB_OUTPUT
        
    - name: üìù Create Release
      uses: softprops/action-gh-release@v1
      with:
        name: "AppsLauncher Modern ${{ steps.release_info.outputs.version }}"
        body: |
          # üöÄ AppsLauncher Modern ${{ steps.release_info.outputs.version }}
          
          ## üì¶ T√©l√©chargements
          
          ### üñ•Ô∏è Windows
          - **Installateur automatique**: `AppsLauncherModern-Setup-v*.exe`
            - Installation dans Program Files
            - Cr√©ation automatique du raccourci bureau
            - Ajout au menu d√©marrer
            - D√©sinstallateur inclus
          
          ### üêß Linux
          - **AppImage portable**: `AppsLauncherModern-v*-x86_64.AppImage`
            - Aucune installation requise
            - Compatible toutes distributions
            - `chmod +x` puis ex√©cuter
            
          - **Package Debian/Ubuntu**: `appslauncher-modern_*_amd64.deb`
            - Installation syst√®me: `sudo dpkg -i package.deb`
            - Int√©gration menu applications
            - D√©sinstallation: `sudo apt remove appslauncher-modern`
          
          ## ‚ú® Fonctionnalit√©s
          - Interface moderne CustomTkinter
          - D√©tection automatique Steam
          - Ic√¥nes haute qualit√© automatiques
          - Support raccourcis syst√®me
          - Th√®me sombre/clair
          - Grille responsive
          
          ## üí° Installation
          
          **Windows**: T√©l√©chargez et ex√©cutez l'installateur `.exe`
          
          **Linux**:
          ```bash
          # AppImage (recommand√©)
          chmod +x AppsLauncherModern-v*-x86_64.AppImage
          ./AppsLauncherModern-v*-x86_64.AppImage
          
          # Package Debian/Ubuntu
          sudo dpkg -i appslauncher-modern_*_amd64.deb
          ```
          
          Consultez le [README](https://github.com/NiavlySDev/AppsLauncherModern#readme) pour plus d'informations.
        files: |
          ./artifacts/windows/*
          ./artifacts/linux/*
        prerelease: ${{ steps.release_info.outputs.prerelease }}
        token: ${{ secrets.GITHUB_TOKEN }}
